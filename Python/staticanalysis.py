import magic
import argparse
import hashlib
import subprocess
import os
import yara

identification = []
ssdeep_path = "/usr/bin/ssdeep"
ssdeep_parameters = "-l"
clamscan_path = "/usr/bin/clamscan"
yara_packerRules = "peid.yara"

parser = argparse.ArgumentParser(description="Malware Static Analysis")
parser.add_argument('-p' , action = 'store' , dest = 'filePath' , help = "Specified file's full path")
args = parser.parse_args()

def detectFileType(filename):
    fileType = magic.from_file(filename)
    identification.append({ 'name' : 'FileType' , 'value' : fileType })

def md5sum(filename):
    file = open(filename, "rb")
    data = file.read()
    md5 = hashlib.md5()
    md5.update(data)
    md5hash = md5.hexdigest()
    identification.append({ 'name' : 'MD5' , 'value' : md5hash })

def sha1sum(filename):
    file = open(filename, "rb")
    data = file.read()
    sha1 = hashlib.sha1()
    sha1.update(data)
    sha1hash = sha1.hexdigest()
    identification.append({ 'name' : "SHA1" , 'value' : sha1hash })

def ssdeep(filename):
    output = subprocess.Popen([ssdeep_path, ssdeep_parameters, filename], stdout=subprocess.PIPE).communicate()[0]
    ssdeepHash = output.split()[1].split(',')[0]
    identification.append({ 'name' : 'SSDEEP' , 'value' : ssdeepHash })

def fileSize(filename):
    file = open(filename, 'rb')
    data = file.read()
    size = len(data)
    identification.append({ 'name' : 'Filesize' , 'value' : str(size / 1000) + " kB"})

def yaraScanner(filename):
    data = open(filename, 'rb').read()
    rules = yara.compile(yara_packerRules)
    matchResult = rules.match(data = data)
    packerName = []
    if matchResult:
        infoList = matchResult['main']
        for i in range(len(infoList)):
            if infoList[i]['rule']:
                packerName.append(infoList[i]['rule'])
    else:
        packerName = None
    identification.append({ 'name' : 'Packer' , 'value' : packerName })


def main():

    md5sum(args.filePath)
    sha1sum(args.filePath)
    ssdeep(args.filePath)
    detectFileType(args.filePath)
    fileSize(args.filePath)
    clamscan(args.filePath)
    yaraScanner(args.filePath)

    for identity in identification:
        print "%10s\t%s" % ( identity['name'] , identity['value'] )

if __name__ == '__main__':
    main()
